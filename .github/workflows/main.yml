name: Build for ARM 32-bit

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build ARM 32-bit

    steps:
      - name: Create working directory
        run: |
          mkdir -p ${{ github.workspace }}/build-arm32
          cd ${{ github.workspace }}/build-arm32

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          path: ${{ github.workspace }}/build-arm32/src

      - name: Install dependencies
        run: |
          sudo dpkg --add-architecture i386
          sudo apt update
          sudo apt install -y gcc-arm-linux-gnueabi g++-arm-linux-gnueabi

      - name: Setup environment variables
        run: |
          export CC=arm-linux-gnueabi-gcc
          export CXX=arm-linux-gnueabi-g++
          echo "CC=$CC" >> $GITHUB_ENV

      - name: Configure and build
        working-directory: ${{ github.workspace }}/build-arm32
        run: |
          cd src
          make clean || true
          make TARGET_ARCH=arm

      - name: Archive artifacts
        uses: actions/upload-artifact@v3
        with:
          name: arm32-build-output
          path: ${{ github.workspace }}/build-arm32/src/*.bin
