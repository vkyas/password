name: Build PHP 7.4.33 ARMv7 with NDK r18b (DNS Bypassed)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      NDK_VERSION: r18b
      PHP_VERSION: 7.4.33
      API_LEVEL: 22
      WORKDIR: build-arm32
      OUTDIR: output-arm32
      HOST_TRIPLE: arm-linux-androideabi
      EXTENSION_DIR: /data/adb/php7/files/bin
      ZEND_EXTENSION_DIR: no-debug-non-zts-20190902

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y make autoconf libtool pkg-config bison re2c curl

    - name: Download NDK
      run: |
        wget https://dl.google.com/android/repository/android-ndk-${NDK_VERSION}-linux-x86_64.zip
        unzip -q android-ndk-${NDK_VERSION}-linux-x86_64.zip
        mv android-ndk-${NDK_VERSION} android-ndk

    - name: Set environment
      run: |
        echo "NDK_HOME=$GITHUB_WORKSPACE/android-ndk" >> $GITHUB_ENV
        echo "TOOLCHAIN=$GITHUB_WORKSPACE/android-ndk/toolchains/arm-linux-androideabi-4.9/prebuilt/linux-x86_64" >> $GITHUB_ENV
        echo "SYSROOT=$GITHUB_ENV/ndk/platforms/android-${API_LEVEL}/arch-arm" >> $GITHUB_ENV
        echo "CC=$GITHUB_WORKSPACE/android-ndk/toolchains/arm-linux-androideabi-4.9/prebuilt/linux-x86_64/bin/arm-linux-androideabi-gcc" >> $GITHUB_ENV

    - name: Download PHP source
      run: |
        curl -sSL https://www.php.net/distributions/php-${PHP_VERSION}.tar.xz | tar -xJf -
        mv php-${PHP_VERSION} ${WORKDIR}

    - name: Disable DNS extension
      run: |
        mv ${WORKDIR}/ext/standard/dns.c ${WORKDIR}/ext/standard/dns.c.disabled

    - name: Configure PHP
      working-directory: ${{ env.WORKDIR }}
      run: |
        ./buildconf --force
        ./configure \
          --host=${HOST_TRIPLE} \
          --prefix=/data/php \
          --disable-all \
          --enable-cli \
          --enable-mbstring \
          --enable-session \
          --enable-tokenizer \
          --enable-xml \
          --enable-posix \
          --enable-bcmath \
          --enable-shmop \
          --enable-sockets \
          --enable-ctype

    - name: Build PHP
      working-directory: ${{ env.WORKDIR }}
      run: |
        make -j$(nproc)

    - name: Save artifact
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: php-arm32
        path: ${{ env.WORKDIR }}/sapi/cli/php
