name: Build PHP for ARMv7a Android

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-24.04

    env:
      NDK_VERSION: r25c
      PHP_VERSION: 7.4.33
      CURL_VERSION: 8.8.0
      OPENSSL_VERSION: 1.1.1w
      API_LEVEL: 19
      WORKDIR: build-arm32
      OUTDIR: output-arm32
      TOOLCHAIN_DIR: arm-toolchain
      SYSROOT: ${{ github.workspace }}/arm-toolchain/sysroot
      PREFIX: ${{ github.workspace }}/arm-toolchain/sysroot/usr

    steps:
    - name: Checkout repo
      uses: actions/checkout@v4

    - name: Install deps
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          autoconf automake libtool pkg-config \
          bison re2c make wget unzip file python3 \
          zlib1g-dev libxml2-dev libsqlite3-dev libonig-dev

    - name: Download & unzip NDK
      run: |
        wget -q https://dl.google.com/android/repository/android-ndk-${NDK_VERSION}-linux.zip
        unzip -q android-ndk-${NDK_VERSION}-linux.zip
        echo "NDK_HOME=${{ github.workspace }}/android-ndk-${NDK_VERSION}" >> $GITHUB_ENV

    - name: Create standalone toolchain
      run: |
        ${{ env.NDK_HOME }}/build/tools/make_standalone_toolchain.py \
          --arch arm \
          --api ${{ env.API_LEVEL }} \
          --install-dir ${{ env.TOOLCHAIN_DIR }} \
          --force

    - name: Export toolchain path
      run: |
        echo "TOOLCHAIN_PATH=${{ github.workspace }}/${{ env.TOOLCHAIN_DIR }}/bin" >> $GITHUB_ENV
        echo "PATH=${{ github.workspace }}/${{ env.TOOLCHAIN_DIR }}/bin:$PATH" >> $GITHUB_ENV

    - name: Symlink gccâ†’clang in toolchain
      run: |
        cd ${{ env.TOOLCHAIN_DIR }}/bin
        ln -sf arm-linux-androideabi-clang arm-linux-androideabi-gcc
        ln -sf arm-linux-androideabi-clang++ arm-linux-androideabi-g++

    - name: Build OpenSSL
      run: |
        wget -q https://www.openssl.org/source/openssl-${OPENSSL_VERSION}.tar.gz
        tar -xzf openssl-${OPENSSL_VERSION}.tar.gz
        cd openssl-${OPENSSL_VERSION}

        # setup environment
        export ANDROID_NDK_HOME=${NDK_HOME}
        export PATH=${TOOLCHAIN_PATH}:$PATH
        export CC=arm-linux-androideabi-clang
        export AR=arm-linux-androideabi-ar
        export RANLIB=arm-linux-androideabi-ranlib
        export STRIP=arm-linux-androideabi-strip

        # configure & build
        ./Configure android-arm \
          -D__ANDROID_API__=${API_LEVEL} \
          --prefix=${PREFIX} \
          no-shared no-asm -fPIC -fPIE -latomic

        make depend
        make -j$(nproc) build_libs
        make install_sw
      shell: bash

    - name: Build cURL
      run: |
        wget -q https://curl.se/download/curl-${CURL_VERSION}.tar.gz
        tar -xzf curl-${CURL_VERSION}.tar.gz
        cd curl-${CURL_VERSION}
        ./configure \
          --host=arm-linux-androideabi \
          --prefix=${PREFIX} \
          --with-ssl=${PREFIX} \
          --disable-shared --enable-static \
          CC=arm-linux-androideabi-clang CXX=arm-linux-androideabi-clang++ \
          AR=arm-linux-androideabi-ar RANLIB=arm-linux-androideabi-ranlib \
          STRIP=arm-linux-androideabi-strip \
          # ... other flags ...
        make -j$(nproc)
        make install

    - name: Build PHP
      run: |
        wget -q https://www.php.net/distributions/php-${PHP_VERSION}.tar.gz
        tar -xzf php-${PHP_VERSION}.tar.gz
        mkdir -p ${WORKDIR} ${OUTDIR}
        cd ${WORKDIR}
        ../php-${PHP_VERSION}/configure \
          --host=arm-linux-androideabi \
          --prefix=/php \
          --disable-all \
          --enable-bcmath --enable-mbstring --enable-json \
          --with-curl=${PREFIX} --with-openssl=${PREFIX} \
          CC=arm-linux-androideabi-clang \
          AR=arm-linux-androideabi-ar \
          RANLIB=arm-linux-androideabi-ranlib \
          STRIP=arm-linux-androideabi-strip \
          CFLAGS="-Os -march=armv7-a -mfloat-abi=softfp -mfpu=neon -fPIC -I${PREFIX}/include" \
          LDFLAGS="-L${PREFIX}/lib -fPIC -pie" \
          LIBS="-lcurl -lssl -lcrypto -lz -ldl"
        make -j$(nproc)
        make install INSTALL_ROOT=../${OUTDIR}

    - name: Post-install & strip
      run: |
        cp ../php-${PHP_VERSION}/php.ini-development ${OUTDIR}/php/lib/php.ini
        sed -i 's/;date.timezone =/date.timezone = UTC/' ${OUTDIR}/php/lib/php.ini
        sed -i 's/;cgi.fix_pathinfo=1/cgi.fix_pathinfo=0/' ${OUTDIR}/php/lib/php.ini
        cp ${PREFIX}/lib/libcrypto.so.1.1 ${OUTDIR}/php/lib/
        cp ${PREFIX}/lib/libssl.so.1.1 ${OUTDIR}/php/lib/
        cp ${PREFIX}/lib/libcurl.so ${OUTDIR}/php/lib/
        arm-linux-androideabi-strip --strip-unneeded ${OUTDIR}/php/bin/php
        find ${OUTDIR}/php/lib/ -name "*.so" -exec arm-linux-androideabi-strip --strip-unneeded {} \;

    - name: Package & upload artifact
      run: tar -czf php-arm32-android.tar.gz -C ${OUTDIR} .
    - uses: actions/upload-artifact@v4
      with:
        name: php-arm32-android
        path: php-arm32-android.tar.gz
