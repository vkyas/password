name: Build PHP for Android ARM32 on Windows with MSYS2

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}

    env:
      NDK_VERSION: r25c
      PHP_VERSION: 7.4.33
      CURL_VERSION: 8.8.0
      OPENSSL_VERSION: 1.1.1w
      API_LEVEL: 19
      PREFIX: /android/sysroot/usr

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install MSYS2 & dependencies
        uses: msys2/setup-msys2@v2
        with:
          msystem: MSYS
          update: true
          install: |
            base-devel wget unzip perl make pkg-config

      - name: Download Android NDK
        run: |
          rm -rf android-ndk-${{ env.NDK_VERSION }}
          wget -q https://dl.google.com/android/repository/android-ndk-${{ env.NDK_VERSION }}-linux.zip
          unzip -o android-ndk-${{ env.NDK_VERSION }}-linux.zip
          echo "NDK_HOME=$(pwd)/android-ndk-${{ env.NDK_VERSION }}" >> $GITHUB_ENV


      - name: Setup NDK toolchain in PATH
        run: |
          export ANDROID_NDK_HOME=$RUNNER_WORKSPACE/android-ndk
          export TOOLCHAIN=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin
          export PATH=$TOOLCHAIN:$PATH
          echo "ANDROID_NDK_HOME=$ANDROID_NDK_HOME" >> $GITHUB_ENV
          echo "TOOLCHAIN=$TOOLCHAIN" >> $GITHUB_ENV

      - name: Create gccâ†’clang symlinks
        run: |
          cd $TOOLCHAIN
          ln -sf armv7a-linux-androideabi${API_LEVEL}-clang arm-linux-androideabi-gcc
          ln -sf armv7a-linux-androideabi${API_LEVEL}-clang++ arm-linux-androideabi-g++

      - name: Build OpenSSL for ARM32
        run: |
          wget -q https://www.openssl.org/source/openssl-${OPENSSL_VERSION}.tar.gz
          tar -xf openssl-${OPENSSL_VERSION}.tar.gz
          cd openssl-${OPENSSL_VERSION}
          export CC=arm-linux-androideabi-gcc
          ./Configure android-arm -D__ANDROID_API__=${API_LEVEL} no-shared no-asm -fPIC -fPIE --prefix=${PREFIX}
          make -j$(nproc) build_libs
          make install_sw

      - name: Build cURL
        run: |
          wget -q https://curl.se/download/curl-${CURL_VERSION}.tar.gz
          tar -xf curl-${CURL_VERSION}.tar.gz
          cd curl-${CURL_VERSION}
          export CC=arm-linux-androideabi-gcc
          ./configure --host=arm-linux-androideabi --with-ssl=${PREFIX} --disable-shared --enable-static --prefix=${PREFIX}
          make -j$(nproc) install

      - name: Build PHP
        run: |
          wget -q https://www.php.net/distributions/php-${PHP_VERSION}.tar.gz
          tar -xf php-${PHP_VERSION}.tar.gz
          cd php-${PHP_VERSION}
          export CC=arm-linux-androideabi-gcc
          export AR=llvm-ar
          export RANLIB=llvm-ranlib
          export STRIP=llvm-strip
          ./configure \
            --host=arm-linux-androideabi \
            --prefix=/php \
            --disable-all \
            --enable-bcmath \
            --enable-mbstring \
            --enable-json \
            --with-curl=${PREFIX} \
            --with-openssl=${PREFIX} \
            --with-zlib \
            CFLAGS="-Os -march=armv7-a -mfloat-abi=softfp -mfpu=neon -fPIC -I${PREFIX}/include" \
            LDFLAGS="-L${PREFIX}/lib -fPIC -pie" \
            LIBS="-lcurl -lssl -lcrypto -lz -ldl"
          make -j$(nproc)
          make install INSTALL_ROOT=$RUNNER_WORKSPACE/output

      - name: Package and upload artifacts
        run: |
          tar -czf php-arm32-android-msys2.tar.gz -C $RUNNER_WORKSPACE/output .
      - uses: actions/upload-artifact@v4
        with:
          name: php-arm32-android-msys2
          path: php-arm32-android-msys2.tar.gz
